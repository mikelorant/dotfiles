# -*- mode: shell-script -*-

# zprof
zmodload zsh/zprof

# completion
zstyle ':completion:*' menu select

autoload -Uz compinit
if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then compinit; else compinit -C; fi

source <(antibody init)

antibody bundle < ~/.zsh_plugins.txt

[ -f ~/.p10k.zsh ] && source ~/.p10k.zsh # p10k configuration
[ -f ~/.fresh/build/shell.sh ] && source ~/.fresh/build/shell.sh # fresh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh # fzf
[ -f ~/.iterm2_shell_integration.zsh ] && source ~/.iterm2_shell_integration.zsh # iterm2
# [ -f /Applications/iTerm.app/Contents/Resources/iterm2_shell_integration.zsh ] && source /Applications/iTerm.app/Contents/Resources/iterm2_shell_integration.zsh

eval "$(direnv hook zsh)"
eval "$(zoxide init zsh --cmd cdd)"

## History file configuration
HISTFILE=~/.zhistory
HISTSIZE=1000000
SAVEHIST=$HISTSIZE

## History command configuration
setopt HIST_IGNORE_ALL_DUPS # history ignore duplicates
setopt HIST_IGNORE_SPACE    # history ignore commands with leading space
setopt SHARE_HISTORY        # shared history between sessions

setopt INTERACTIVECOMMENTS  # allow interactive comments
setopt TRANSIENT_RPROMPT    # remove any right prompt from display when accepting a command line

# keyboard bindings
bindkey "^[[3~"   delete-char
bindkey "^[3;5~"  delete-char
bindkey "^I"      fzf-tab-partial-and-complete
bindkey "^U"      backward-kill-line # https://github.com/gableroux/iterm2-macos-dynamic-profile
bindkey "^X\\x7f" backward-kill-line
bindkey "^X^_"    redo
bindkey "^[[A"    history-substring-search-up
bindkey "^[[B"    history-substring-search-down

# environmental variables
# export PATH="$( gem environment gemdir )/bin:$PATH" # add path for ruby gem binaries
export PATH="/usr/local/lib/ruby/gems/2.7.0/bin:$PATH" # add path for ruby gem binaries
export PATH="/usr/local/opt/ruby/bin:$PATH" # add path for ruby
export PATH="/usr/local/sbin:$PATH" # add path for homebrew

export CLICOLOR=1                      # enable colours in terminal
export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD # colour settings for ls
# export LS_COLORS="di=36:ln=35:so=31;1;44:pi=30;1;44:ex=1;31:bd=0;1;44:cd=37;1;44:su=37;1;41:sg=30;1;43:tw=30;1;42:ow=30;1;43"
export LS_COLORS="$(vivid generate jellybeans)"
export EDITOR=nano                     # default editor nano
export DIRENV_LOG_FORMAT=              # disable direnv output
export ABBR_QUIET=1                    # enable abbr quiet mode
export ABBR_AUTOLOAD=0                 # disable updates to the user abbrevations file
export FZF_DEFAULT_OPTS="--ansi --color=dark,fg:-1,bg:-1,hl:#5fff87,fg+:-1,bg+:-1,hl+:#ffaf5f,info:#af87ff,prompt:#5fff87,pointer:#ff87d7,marker:#ff87d7,spinner:#ff87d7"

# aliases
alias df="df -blh"
alias ls="lsd-symbolic-link-dereference --group-dirs first --date relative"
alias cat="bat"

# function precmd() { it2setkeylabel set status "Context: $( kubectl config current-context )"; }
function precmd() { it2setkeylabel set status "Context: $( awk '$1 == "current-context:" {print $2}' ~/.kube/config )"; }
function fzf-tab-partial-and-complete() { if [[ $LASTWIDGET = 'fzf-tab-partial-and-complete' ]]; then fzf-tab-complete; else zle complete-word; fi }
function lsd-symbolic-link-dereference() { if [[ -h ${@: -1} && -d $( greadlink -f ${@: -1} ) ]]; then lsd ${@:1:${#}-1} $( greadlink -f ${@: -1} ); else lsd ${@}; fi }

zle -N fzf-tab-partial-and-complete

[[ ${ITERM_SESSION_ID:3:1} -eq 0 && -x $(command -v neofetch) ]] && neofetch || true
